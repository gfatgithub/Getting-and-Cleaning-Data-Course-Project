fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(dileUrl,destfile = "q1.csv")
data<-read.csv("q1.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile = "q1.csv")
data<-read.csv("q1.csv")
head(data,4)
class(data)
data[,data$ACR=3 & data$AGS=6]
data[,data$ACR==3 & data$AGS==6]
data[(data$ACR==3 & data$AGS==6),]
data[which(data$ACR==3 & data$AGS==6),]
data[which(data$ACR==3 & data$AGS==6),1:3]
q1<-data[which(data$ACR==3 & data$AGS==6),]
head(q1,3)
q1<-data[which(data$ACR==3 & data$AGS==6),1]
head(q1,3)
q1<-data[which(data$ACR==3 & data$AGS==6),0]
head(q1,3)
install.packages("jpeg")
library("jpeg")
library("jpeg")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,destfile = "q2.jpg")
img <- readJPEG(f, native = TRUE)
library("jpeg")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,destfile = "q2.jpg")
img <- readJPEG("q2.jpg", native = TRUE)
img
quantile(img, probs = c(0.3, 0.8))
library("jpeg")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,destfile = "q2.jpg")
img <- readJPEG("q2.jpg", native = TRUE)
quantile(img, probs = c(0.3, 0.8))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
f <- file.path(getwd(), "jeff.jpg")
download.file(url, f, mode = "wb")
img <- readJPEG(f, native = TRUE)
quantile(img, probs = c(0.3, 0.8))
library("jpeg")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,destfile = "q2.jpg", mode = "wb")
img <- readJPEG("q2.jpg", native = TRUE)
quantile(img, probs = c(0.3, 0.8))
library("jpeg")
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,destfile = "q2.jpg", mode = "wb")
img <- readJPEG("q2.jpg", native = TRUE)
quantile(img, probs = c(0.3, 0.8))
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile = "GDP.csv")
gdp<-read.csv("GDP.csv")
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl,destfile = "Country.csv")
country<-read.csv("Country.csv")
head(country,3)
head(gdp,3)
head(gdp,10)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile = "GDP.csv")
gdp<-read.csv("GDP.csv",skip = 4)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl,destfile = "Country.csv")
country<-read.csv("Country.csv")
head(gdp,10)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile = "GDP.csv")
gdp<-read.csv("GDP.csv",skip = 4)
gdp <- gdp[X != ""]
gdp <- gdp[, list(X, X.1, X.3, X.4)]
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl,destfile = "Country.csv")
country<-read.csv("Country.csv")
head(gdp,10)
dt <- merge(gdp, country, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
head(gdp,10)
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
library("data.table")
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
head(gdp,10)
dt <- merge(gdp, country, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,destfile = "GDP.csv")
gdp<-read.csv("GDP.csv",skip = 4, nrows = 215))
gdp <- gdp[X != ""]
gdp <- gdp[, list(X, X.1, X.3, X.4)]
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl,destfile = "Country.csv")
country<-read.csv("Country.csv")
head(gdp,10)
dt <- merge(gdp, country, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
dt <- merge(gdp, country, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
breaks <- quantile(dt$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileURL,destfile ="hid.csv")
hid<-read.csv(destfile)
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destfile ="hid.csv"
download.file(fileURL,destfile )
hid<-read.csv(destfile)
hid
hid$wgtp
hid$wgtp1
strsplit(names(hid))
r<-strsplit(names(hid,"wgtp"))
r[123]
r<-strsplit(names(hid,"wgtp"))
r<-strsplit(names(hid),"wgtp")
r[123]
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile ="GDP.csv"
download.file(fileURL,destfile )
gdp<-read.csv(destfile)
str(gdp)
summery(gdp)
summary(gdp)
gdp$Gross.domestic.product.2012
gdp$X.3
mean(gsub(",","",gdp$X.3))
gsub(",","",gdp$X.3)
mean(as.fa(gsub(",","",gdp$X.3)))
mean(as.factor(gsub(",","",gdp$X.3)))
mean(as.numeric(gsub(",","",gdp$X.3)))
colMeans(as.numeric(gsub(",","",gdp$X.3)),na.rm = TRUE,1)
class(as.numeric(gsub(",","",gdp$X.3))
)
class(gsub(",","",gdp$X.3))
gdp$X.3<-gsub(",","",gdp$X.3)
summary(gdp)
str(gdp)
gdp
Means(as.numeric(gdp$X.3),na.rm = TRUE)
mean(as.numeric(gdp$X.3),na.rm = TRUE)
newgdp <- gdp[5:194,]
mean(newgdp,na.rm = TRUE)
gdp[5:194,]
newgdp <- gdp[5:194,"X.3"]
newgdp
mean(asnumeric(newgdp),na.rm = TRUE)
mean(as.numeric(newgdp),na.rm = TRUE)
countryNames <- gdp[5:194,"X.2"]
grep("^United",countryNames)
countryNames[32]
countryNames[6]
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile ="GDP.csv"
download.file(fileURL,destfile )
gdp<-read.csv(destfile)
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile ="fed.csv"
download.file(fileURL,destfile )
fed<-read.csv(destfile)
str(fed)
str(gdp)
summary()
summary(fed)
summary(gdp)
head(fed,5)
fed$Special.Notes
grep("Fiscal year end:",fed$Special.Notes)
View(fed)
View(gdp)
gripl
hasFiscal<-grep("Fiscal year end:",fed$Special.Notes)
hasFiscal
hasFiscal<-grep("Fiscal year end:",fed$Special.Notes)
isJune<-grep("June",fed$Special.Notes)
##Q4
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile ="GDP.csv"
download.file(fileURL,destfile )
gdp<-read.csv(destfile,skip=4,nrows=190)
fileURL="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile ="fed.csv"
download.file(fileURL,destfile )
fed<-read.csv(destfile)
view(gdp)
view(fed)
View(gdp)
View(fed)
mergeData <- merge(gdp, fed, by.x = "X", by.y = "CountryCode")
View(mergeData)
june <- grep('Fiscal year end: June', mergeData$Special.Notes)
length(june)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
2012data<-grep("2012",sampleTimes)
data<-grep("2012",sampleTimes)
data
length(data)
data<-grep("2012-",sampleTimes)
length(data)
sample2012<-subset(sampleTimes,data)
data<-grepl("2012-",sampleTimes)
length(data)
data
sample2012<-subset(sampleTimes,data)
sample2012
length(sample2012)
format(Sys.Date(), "%a %b %d")
day <- format(sampleTimes2012, '%A')
sampleTimes2012 <- subset(sampleTimes, year2012)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
data<-grep("2012-",sampleTimes)
length(data)
data<-grepl("2012-",sampleTimes)
sample2012<-subset(sampleTimes,data)
length(sample2012)
sampleTimes2012 <- subset(sampleTimes, year2012)
day <- format(sampleTimes2012, '%A')
sample2012<-subset(sampleTimes,data)
length(sample2012)
sampleTimes2012 <- subset(sampleTimes, data)
table(data)
day <- format(sample2012, '%A')
day
day <- format(sample2012, '%A')
table(day)
if(!file.exists("./data")){dir.create("./data")}
if(!file.exists("./data")){dir.create("./data")}
pwd
pwd()
if(!file.exists("./data")){dir.create("./data")}
if(!file.exists("./data"))
{
dir.create("./data")
print("DD")
}
if(!file.exists("./data"))
{
dir.create("./data")
print("DD")
}
else
{
print("fff")
}
if(!file.exists("./data"))
{
dir.create("./data")
print("DD")
}
else
{
print(file.path("./data"))
}
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.path(".//data"))
}
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.info(".//data"))
}
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.info(".//data"))
}
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.info(".//data"))
}
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.info(".//data"))
}
getwd()
setwd("C:\\Users\\Goya\\Google Drive\\Data Scientist\\Getting and Cleaning Data\\Week4\\run_analysis\\Getting-and-Cleaning-Data-Course-Project")
getwd()
if(!file.exists(".//data"))
{
dir.create(".//data")
print("DD")
}
else
{
print(file.info(".//data"))
}
if(!file.exists("./data"))
{
dir.create("./data")
print("DD")
}
else
{
print(file.info("./data"))
}
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
unzip(zipURL,overwrite = TRUE)
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
unzip(zipURL)
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
r<-unzip(zipURL)
r
if(!file.exists("./data")){dir.create("./data")}
##Loading the zip file
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
unzip(zipURL,exdir="./data")
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipURL,temp, mode="wb")
##Loading the zip file
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipURL,"./data", mode="wb")
##Create data folder
if(!file.exists("./data")){dir.create("./data")}
##Loading the zip file
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(zipURL,"./data", mode="wb")
##Create data folder
if(!file.exists("./data")){dir.create("./data")}
##Loading the zip file
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile =".data//Dataset.zip"
download.file(zipURL,destFile, mode="wb")
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile =".data//Dataset.zip"
download.file(zipURL,destFile)
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile =".data//Dataset.zip"
download.file(zipURL,destFile)
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile ="Dataset.zip"
download.file(zipURL,destFile)
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile =".//data/Dataset.zip"
download.file(zipURL,destFile)
##Create data folder
if(!file.exists("./data")){dir.create("./data")}
##Loading the zip file
zipURL="https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
destFile =".//data//Dataset.zip"
download.file(zipURL,destFile)
unzip(destFile,exdir="./data")
X_test<- read.table("./data/UCI HAR Dataset/test/X_test.txt")
Y_test<- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
subject_test <-read.table("UCI HAR Dataset/test/subject_test.txt")
X_test<- read.table("./data/UCI HAR Dataset/test/X_test.txt")
Y_test<- read.table("./data/UCI HAR Dataset/test/Y_test.txt")
subject_test <-read.table("./data/UCI HAR Dataset/test/subject_test.txt")
## creating training data:
X_train<- read.table("./data/UCI HAR Dataset/train/X_train.txt")
Y_train<- read.table("./data/UCI HAR Dataset/train/Y_train.txt")
subject_train <-read.table("./data/UCI HAR Dataset/train/subject_train.txt")
## features and activity
features<-read.table("./data/UCI HAR Dataset/features.txt")
activity_labels<-read.table("./data/UCI HAR Dataset/activity_labels.txt")
X<-rbind(X_test, X_train)
Y<-rbind(Y_test, Y_train)
Subject<-rbind(subject_test, subject_train)
features[,2]
features
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
X<-X[,index] ## getting only variables with mean/stdev
X
Y[,1]
Y[,1]<-activity[Y[,1],2] ## replacing numeric values with lookup value from activity.txt; won't reorder Y set
head(Y)
Y[,1]<-activity_labels[Y[,1],2] ## replacing numeric values with lookup value from activity.txt; won't reorder Y set
head(Y)
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
X<-X[,index]
##Uses descriptive activity names to name the activities in the data set
Y[,1]<-activity_labels[Y[,1],2]
index
X[,index]
X
length(index)
X<-X[,index]
length(index)
length(x)
length(X)
X<-X[,index]
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
X[,index]
X[,65]
dim(X)
X_test
X_train
dim(X)
dim(Y)
dim(Subject)
dim(X_test)
dim(Y_test)
dim(subject_test)
dim(X_train)
dim(Y_train)
dim(subject_train)
dim(features)
dim(activity_labels)
X<-rbind(X_test, X_train)
Y<-rbind(Y_test, Y_train)
Subject<-rbind(subject_test, subject_train)
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
length(index)
length(index)
dim(X)
dim(Y)
dim(Subject)
dim(X)
dim(Y)
dim(Subject)
index<-grep("mean\\(\\)|std\\(\\)", features[,2])
X<-X[,index]
length(index)
length(X)
dim(X)
Y[,1]<-activity_labels[Y[,1],2]
Y[,1]
names(X)<-features[index,2]
names(Subject)<-"SubjectID"
names(Y)<-"Activity"
CleanedData<-cbind(Subject, Y, X)
head(CleanedData[,c(1:4)])
readyDataTable<-data.table(readyData)
TidyData <- readyData[, lapply(.SD, mean), by = 'SubjectID,Activity']
dim(TidyData)
readyData<-cbind(Subject, Y, X)
readyDataTable<-data.table(readyData)
TidyData <- readyData[, lapply(.SD, mean), by = 'SubjectID,Activity']
dim(TidyData)
readyData<-data.table(readyData)
TidyData <- readyData[, lapply(.SD, mean), by = 'SubjectID,Activity']
dim(TidyData)
readyData<-data.table(readyData)
tidyData <- readyData[, lapply(.SD, mean), by = 'SubjectID,Activity']
dim(TidyData)
write.table(tidyData, file = "tidy.txt", row.names = FALSE)
